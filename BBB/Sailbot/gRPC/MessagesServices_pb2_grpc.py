# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ArduinoMessages_pb2 as ArduinoMessages__pb2
import MessagesServices_pb2 as MessagesServices__pb2
import TrimTabMessages_pb2 as TrimTabMessages__pb2


class AirmarReaderStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAirmarData = channel.unary_unary(
        '/AirmarReader/GetAirmarData',
        request_serializer=MessagesServices__pb2.Server_request.SerializeToString,
        response_deserializer=MessagesServices__pb2.AirmarData.FromString,
        )


class AirmarReaderServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetAirmarData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AirmarReaderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAirmarData': grpc.unary_unary_rpc_method_handler(
          servicer.GetAirmarData,
          request_deserializer=MessagesServices__pb2.Server_request.FromString,
          response_serializer=MessagesServices__pb2.AirmarData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'AirmarReader', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class AutonomousValueReaderStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAutonomousValues = channel.unary_unary(
        '/AutonomousValueReader/GetAutonomousValues',
        request_serializer=MessagesServices__pb2.Readings.SerializeToString,
        response_deserializer=MessagesServices__pb2.ControlValues.FromString,
        )


class AutonomousValueReaderServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetAutonomousValues(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AutonomousValueReaderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAutonomousValues': grpc.unary_unary_rpc_method_handler(
          servicer.GetAutonomousValues,
          request_deserializer=MessagesServices__pb2.Readings.FromString,
          response_serializer=MessagesServices__pb2.ControlValues.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'AutonomousValueReader', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class PWMReaderStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetPWMInputs = channel.unary_unary(
        '/PWMReader/GetPWMInputs',
        request_serializer=ArduinoMessages__pb2.ControlAngles.SerializeToString,
        response_deserializer=ArduinoMessages__pb2.PWMValues.FromString,
        )
    self.GetPWMValues = channel.unary_unary(
        '/PWMReader/GetPWMValues',
        request_serializer=MessagesServices__pb2.Server_request.SerializeToString,
        response_deserializer=ArduinoMessages__pb2.PWMValues.FromString,
        )
    self.GetControlAngles = channel.unary_unary(
        '/PWMReader/GetControlAngles',
        request_serializer=MessagesServices__pb2.Server_request.SerializeToString,
        response_deserializer=ArduinoMessages__pb2.ControlAngles.FromString,
        )


class PWMReaderServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetPWMInputs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPWMValues(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetControlAngles(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PWMReaderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetPWMInputs': grpc.unary_unary_rpc_method_handler(
          servicer.GetPWMInputs,
          request_deserializer=ArduinoMessages__pb2.ControlAngles.FromString,
          response_serializer=ArduinoMessages__pb2.PWMValues.SerializeToString,
      ),
      'GetPWMValues': grpc.unary_unary_rpc_method_handler(
          servicer.GetPWMValues,
          request_deserializer=MessagesServices__pb2.Server_request.FromString,
          response_serializer=ArduinoMessages__pb2.PWMValues.SerializeToString,
      ),
      'GetControlAngles': grpc.unary_unary_rpc_method_handler(
          servicer.GetControlAngles,
          request_deserializer=MessagesServices__pb2.Server_request.FromString,
          response_serializer=ArduinoMessages__pb2.ControlAngles.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PWMReader', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BBBSensorReaderStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetSensorData = channel.unary_unary(
        '/BBBSensorReader/GetSensorData',
        request_serializer=MessagesServices__pb2.Server_request.SerializeToString,
        response_deserializer=MessagesServices__pb2.BBBSersorData.FromString,
        )


class BBBSensorReaderServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetSensorData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BBBSensorReaderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetSensorData': grpc.unary_unary_rpc_method_handler(
          servicer.GetSensorData,
          request_deserializer=MessagesServices__pb2.Server_request.FromString,
          response_serializer=MessagesServices__pb2.BBBSersorData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'BBBSensorReader', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class TrimTabGetterStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetTrimTabSetting = channel.unary_unary(
        '/TrimTabGetter/SetTrimTabSetting',
        request_serializer=TrimTabMessages__pb2.TrimState.SerializeToString,
        response_deserializer=TrimTabMessages__pb2.ApparentWind_Trim.FromString,
        )
    self.GetTrimState = channel.unary_unary(
        '/TrimTabGetter/GetTrimState',
        request_serializer=MessagesServices__pb2.Server_request.SerializeToString,
        response_deserializer=TrimTabMessages__pb2.TrimState.FromString,
        )
    self.GetApparentWind = channel.unary_unary(
        '/TrimTabGetter/GetApparentWind',
        request_serializer=MessagesServices__pb2.Server_request.SerializeToString,
        response_deserializer=TrimTabMessages__pb2.ApparentWind_Trim.FromString,
        )


class TrimTabGetterServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetTrimTabSetting(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTrimState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetApparentWind(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TrimTabGetterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetTrimTabSetting': grpc.unary_unary_rpc_method_handler(
          servicer.SetTrimTabSetting,
          request_deserializer=TrimTabMessages__pb2.TrimState.FromString,
          response_serializer=TrimTabMessages__pb2.ApparentWind_Trim.SerializeToString,
      ),
      'GetTrimState': grpc.unary_unary_rpc_method_handler(
          servicer.GetTrimState,
          request_deserializer=MessagesServices__pb2.Server_request.FromString,
          response_serializer=TrimTabMessages__pb2.TrimState.SerializeToString,
      ),
      'GetApparentWind': grpc.unary_unary_rpc_method_handler(
          servicer.GetApparentWind,
          request_deserializer=MessagesServices__pb2.Server_request.FromString,
          response_serializer=TrimTabMessages__pb2.ApparentWind_Trim.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TrimTabGetter', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
